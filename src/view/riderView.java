/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.MotorcyclistDao;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Admin;
import model.Motorcyclist;

/**
 *
 * @author user
 */
public class riderView extends javax.swing.JFrame {
    private SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

    private Admin admin; // Store Admin object

    // Constructor with Admin parameter
    public riderView(Admin admin) {
        this.admin = admin;
        initComponents();
        loadMotorcyclistData();
    }
    
    void loadMotorcyclistData() {
   MotorcyclistDao motorcyclistDao = new MotorcyclistDao();
    List<Motorcyclist> riders = motorcyclistDao.findAllMotorcyclist();
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0); // Clear existing data

    for (Motorcyclist rider : riders) {
        model.addRow(new Object[]{
            rider.getId(),
            rider.getName(),
            rider.getLicenseNumber(),
            rider.getPhone(),
            rider.getDateOfBirth() != null ? dateFormat.format(rider.getDateOfBirth()) : "N/A",
            rider.getCooperativeName() // Only show name, not ID
        });
    }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        dashbrdButton = new javax.swing.JButton();
        RegisterButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        deleteButton = new javax.swing.JButton();
        rfrshButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 0, 51));
        jPanel1.setOpaque(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 102, 0));

        jLabel1.setBackground(new java.awt.Color(153, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText(" RIDERS MANAGEMENT");

        dashbrdButton.setText("HOME");
        dashbrdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashbrdButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 549, Short.MAX_VALUE)
                .addComponent(dashbrdButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(dashbrdButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 667, 110));

        RegisterButton.setBackground(new java.awt.Color(0, 0, 0));
        RegisterButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        RegisterButton.setForeground(new java.awt.Color(255, 255, 255));
        RegisterButton.setText("REGISTER");
        RegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterButtonActionPerformed(evt);
            }
        });
        jPanel1.add(RegisterButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 163, 118, 38));

        editButton.setBackground(new java.awt.Color(0, 0, 0));
        editButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        editButton.setForeground(new java.awt.Color(255, 255, 255));
        editButton.setText("EDIT INFORMATION");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });
        jPanel1.add(editButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 163, -1, 38));

        jTable1.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Names", "License Number", "Phone ", "Date of Birth", "Cooperative"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 234, 635, 177));

        deleteButton.setBackground(new java.awt.Color(0, 0, 0));
        deleteButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        jPanel1.add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(413, 163, 118, 38));

        rfrshButton.setBackground(new java.awt.Color(0, 0, 0));
        rfrshButton.setForeground(new java.awt.Color(255, 255, 255));
        rfrshButton.setText("REFRESH");
        rfrshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rfrshButtonActionPerformed(evt);
            }
        });
        jPanel1.add(rfrshButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(549, 422, 118, 38));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/javapic.PNG"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 670, 360));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rfrshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rfrshButtonActionPerformed
        // TODO add your handling code here:
         loadMotorcyclistData();
    JOptionPane.showMessageDialog(this, "Data refreshed!");
    }//GEN-LAST:event_rfrshButtonActionPerformed

    private void RegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterButtonActionPerformed
        // TODO add your handling code here:
        
          RiderRegistrationForm registrationForm = new RiderRegistrationForm(this);
    JDialog dialog = new JDialog(this, "Register Rider", true);
    dialog.getContentPane().add(registrationForm.getContentPane());
    dialog.pack();
    dialog.setLocationRelativeTo(this);
    dialog.setVisible(true);
    }//GEN-LAST:event_RegisterButtonActionPerformed

    private void dashbrdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashbrdButtonActionPerformed
        // TODO add your handling code here:
        new AdminDashboard(admin).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_dashbrdButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
      int selectedRow = jTable1.getSelectedRow();
    if (selectedRow >= 0) {
        try {
            // First get the rider ID from the visible table
            int riderId = (Integer) jTable1.getValueAt(selectedRow, 0);
            
            // Then fetch the complete rider data from database
            MotorcyclistDao dao = new MotorcyclistDao();
            Motorcyclist rider = dao.findMotorcyclistById(riderId);
            
            if (rider != null) {
                // Open update form as dialog
                updateRiderform updateForm = new updateRiderform(this, rider);
                JDialog dialog = new JDialog(this, "Edit Rider", true);
                dialog.setContentPane(updateForm.getContentPane());
                dialog.pack();
                dialog.setLocationRelativeTo(this);
                dialog.setVisible(true);
                
                // Refresh the table after editing
                loadMotorcyclistData();
            } else {
                JOptionPane.showMessageDialog(this, "Rider not found in database!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            e.printStackTrace();
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a rider to edit!");
    }
    }//GEN-LAST:event_editButtonActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
       if (evt.getClickCount() == 2) {
        int selectedRow = jTable1.getSelectedRow();
        
        if (selectedRow >= 0) {
            try {
                // Get the rider ID from the first column
                int riderId = (Integer)jTable1.getValueAt(selectedRow, 0);
                
                // Fetch complete rider data from DAO using the ID
                MotorcyclistDao dao = new MotorcyclistDao();
                Motorcyclist rider = dao.findMotorcyclistById(riderId);
                
                if (rider != null) {
                    // Open edit dialog
                    updateRiderform updateForm = new updateRiderform(this, rider);
                    JDialog dialog = new JDialog(this, "Edit Rider", true);
                    dialog.setContentPane(updateForm.getContentPane());
                    dialog.pack();
                    dialog.setLocationRelativeTo(this);
                    dialog.setVisible(true);
                    
                    loadMotorcyclistData(); // Refresh table
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            }
        }
    
    }
    }//GEN-LAST:event_jTable1MouseClicked

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        MotorcyclistDao dao = new MotorcyclistDao();   
        int selectedRow = jTable1.getSelectedRow();
    if (selectedRow >= 0 && jTable1.getRowCount() > 0) {
        try {
            Object idValue = jTable1.getValueAt(selectedRow, 0);
            if (idValue == null) {
                JOptionPane.showMessageDialog(this, "Invalid rider selected!");
                return;
            }
            
            int riderId = (Integer) idValue;
            int confirm = JOptionPane.showConfirmDialog(
                this, 
                "Delete rider ID: " + riderId + "?", 
                "Confirm Deletion", 
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE
            );
            
            if (dao.delete(riderId)) {
    JOptionPane.showMessageDialog(this, "Rider deleted successfully!");
    loadMotorcyclistData();
} else {
    JOptionPane.showMessageDialog(this, 
        "Failed to delete rider. Either rider not found or database error occurred.");
}
        } catch (ClassCastException e) {
            JOptionPane.showMessageDialog(this, "Invalid ID format!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select a rider to delete!");
    }

    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(riderView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(riderView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(riderView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(riderView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new riderView(admin).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton RegisterButton;
    private javax.swing.JButton dashbrdButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton rfrshButton;
    // End of variables declaration//GEN-END:variables
}
